{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\Dev\\\\Projects\\\\helix-app\\\\client\\\\src\\\\components\\\\Header\\\\index.tsx\";\nimport React from 'react';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\nimport styles from './styles.module.scss';\nimport { useState } from 'react';\nimport Notifications from '../Modals/Notifications';\nexport default function Header(props) {\n  const {\n    0: isNotificationsVisible,\n    1: setIsNotificationsVisible\n  } = useState(false);\n  const {\n    0: isSearchInputVisible,\n    1: setIsSearchInputVisible\n  } = useState(false);\n\n  const openNotifications = () => {\n    setIsNotificationsVisible(true);\n  };\n\n  const showHideSearchInput = () => {\n    if (isSearchInputVisible) {\n      setIsSearchInputVisible(false);\n    } else {\n      setIsSearchInputVisible(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonsHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.searchContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Pesquisar\",\n            className: `${isSearchInputVisible ? `${styles.showSearchInput}` : `${styles.hideSearchInput}`}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showHideSearchInput,\n            className: styles.searchBtn,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"search\",\n              className: styles.faIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openNotifications,\n          className: styles.notificationButton,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.badgeNewNotification,\n            children: \"99+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"bell\",\n            className: styles.faIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isNotificationsVisible ? /*#__PURE__*/_jsxDEV(Notifications, {\n      onClose: () => setIsNotificationsVisible(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 39\n    }, this) : null]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/Rafael/Documents/Dev/Projects/helix-app/client/src/components/Header/index.tsx"],"names":["React","library","FontAwesomeIcon","fas","add","styles","useState","Notifications","Header","props","isNotificationsVisible","setIsNotificationsVisible","isSearchInputVisible","setIsSearchInputVisible","openNotifications","showHideSearchInput","headerContainer","title","buttonsHeader","searchContainer","showSearchInput","hideSearchInput","searchBtn","faIcon","notificationButton","badgeNewNotification"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,GAAT,QAAoB,mCAApB;AAEAF,OAAO,CAACG,GAAR,CAAYD,GAAZ;AAGA,OAAOE,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,QAAM;AAAA,OAACC,sBAAD;AAAA,OAAyBC;AAAzB,MAAsDL,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM;AAAA,OAACM,oBAAD;AAAA,OAAuBC;AAAvB,MAAkDP,QAAQ,CAAC,KAAD,CAAhE;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC5BH,IAAAA,yBAAyB,CAAC,IAAD,CAAzB;AACH,GAFD;;AAIA,QAAMI,mBAAmB,GAAG,MAAM;AAC9B,QAAGH,oBAAH,EAAyB;AACrBC,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;AACH,KAFD,MAEO;AACHA,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACH;AACJ,GAND;;AAQA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAER,MAAM,CAACW,eAAvB;AAAA,8BACI;AAAA,kBAAKP,KAAK,CAACQ;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACa,aAAvB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAEb,MAAM,CAACc,eAAvB;AAAA,kCACI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,WAAW,EAAC,WAFhB;AAGI,YAAA,SAAS,EAAG,GAAEP,oBAAoB,GAC7B,GAAEP,MAAM,CAACe,eAAgB,EADI,GAG7B,GAAEf,MAAM,CAACgB,eAAgB,EAC5B;AAPN;AAAA;AAAA;AAAA;AAAA,kBADJ,eAUI;AAAQ,YAAA,OAAO,EAAEN,mBAAjB;AAAsC,YAAA,SAAS,EAAEV,MAAM,CAACiB,SAAxD;AAAA,mCACI,QAAC,eAAD;AAAiB,cAAA,IAAI,EAAC,QAAtB;AAA+B,cAAA,SAAS,EAAEjB,MAAM,CAACkB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAgBI;AAAQ,UAAA,OAAO,EAAET,iBAAjB;AAAoC,UAAA,SAAS,EAAET,MAAM,CAACmB,kBAAtD;AAAA,kCACI;AAAK,YAAA,SAAS,EAAEnB,MAAM,CAACoB,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAC,MAAtB;AAA8B,YAAA,SAAS,EAAEpB,MAAM,CAACkB;AAAhD;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAkCKb,sBAAsB,gBAAG,QAAC,aAAD;AAAe,MAAA,OAAO,EAAE,MAAMC,yBAAyB,CAAC,KAAD;AAAvD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwE,IAlCnG;AAAA,kBADJ;AAsCH","sourcesContent":["import React from 'react'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fas)\r\n\r\n\r\nimport styles from './styles.module.scss'\r\nimport { useState } from 'react'\r\nimport Notifications from '../Modals/Notifications'\r\n\r\nexport default function Header(props) {\r\n    const [isNotificationsVisible, setIsNotificationsVisible] = useState(false)\r\n    const [isSearchInputVisible, setIsSearchInputVisible] = useState(false)\r\n\r\n    const openNotifications = () => {\r\n        setIsNotificationsVisible(true)\r\n    }\r\n\r\n    const showHideSearchInput = () => {\r\n        if(isSearchInputVisible) {\r\n            setIsSearchInputVisible(false)\r\n        } else {\r\n            setIsSearchInputVisible(true)\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <div className={styles.headerContainer}>\r\n                <h1>{props.title}</h1>\r\n\r\n                <div className={styles.buttonsHeader}>\r\n                    <div className={styles.searchContainer}>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Pesquisar\" \r\n                            className={`${isSearchInputVisible ? (\r\n                                `${styles.showSearchInput}`\r\n                            ) : (\r\n                                `${styles.hideSearchInput}`\r\n                            )}`} \r\n                        />\r\n                        <button onClick={showHideSearchInput} className={styles.searchBtn}>\r\n                            <FontAwesomeIcon icon=\"search\" className={styles.faIcon} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <button onClick={openNotifications} className={styles.notificationButton}>\r\n                        <div className={styles.badgeNewNotification}>\r\n                            99+\r\n                        </div>\r\n\r\n                        {/* <div className={styles.newIssueNotification}>\r\n                            <FontAwesomeIcon icon=\"exclamation-circle\" />\r\n                        </div> */}\r\n\r\n                        <FontAwesomeIcon icon=\"bell\"  className={styles.faIcon} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            \r\n            {isNotificationsVisible ? <Notifications onClose={() => setIsNotificationsVisible(false)} /> : null}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}