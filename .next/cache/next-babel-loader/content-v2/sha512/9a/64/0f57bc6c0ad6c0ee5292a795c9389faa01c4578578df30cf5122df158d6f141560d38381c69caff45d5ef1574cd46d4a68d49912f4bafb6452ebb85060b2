{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\Dev\\\\Projects\\\\helix-app\\\\admin-helix-app\\\\src\\\\components\\\\Header\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Image from 'next/image';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fas);\nimport styles from './styles.module.scss';\nimport { useState } from 'react';\nimport Notifications from '../Modals/Notifications';\nimport NewDelivery from '../Modals/NewDelivery';\nimport NewPayment from '../Modals/NewPayment';\nexport default function Header(props) {\n  _s();\n\n  var _useState = useState(false),\n      isNotificationsVisible = _useState[0],\n      setIsNotificationsVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      isSearchInputVisible = _useState2[0],\n      setIsSearchInputVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      isModalNewDeliveryVisible = _useState3[0],\n      setIsModalNewDeliveryVisible = _useState3[1];\n\n  var _useState4 = useState(false),\n      isNewOptionsVisible = _useState4[0],\n      setIsNewOptionsVisible = _useState4[1];\n\n  var _useState5 = useState(false),\n      isNewPaymentVisible = _useState5[0],\n      setIsNewPaymentVisible = _useState5[1];\n\n  var openNotifications = function openNotifications() {\n    setIsNotificationsVisible(true);\n  };\n\n  var showHideSearchInput = function showHideSearchInput() {\n    if (isSearchInputVisible) {\n      setIsSearchInputVisible(false);\n    } else {\n      setIsSearchInputVisible(true);\n    }\n  };\n\n  var newDelivery = function newDelivery() {\n    setIsModalNewDeliveryVisible(true);\n  };\n\n  var newPayment = function newPayment() {\n    setIsNewPaymentVisible(true);\n  };\n\n  var newOptions = function newOptions() {\n    setIsNewOptionsVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.headerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          width: 115.71,\n          height: 25,\n          src: \"/img/logo/orange-logo.png\",\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: '{props.title}'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttonsHeader,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.searchContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Pesquisar\",\n            className: \"\".concat(isSearchInputVisible ? \"\".concat(styles.showSearchInput) : \"\".concat(styles.hideSearchInput))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showHideSearchInput,\n            className: styles.searchBtn,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"search\",\n              className: styles.faIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openNotifications,\n          className: styles.notificationButton,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.badgeNewNotification,\n            children: \"99+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"bell\",\n            className: styles.faIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newOptions,\n          className: styles.newDelivery,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), isNewOptionsVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.newOptionsContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: newPayment,\n            children: \"Novo pagamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: newDe,\n            children: \"Nova entrega\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this) : null, isNewPaymentVisible ? /*#__PURE__*/_jsxDEV(NewPayment, {\n          onClose: function onClose() {\n            setIsNewPaymentVisible(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this) : null, isModalNewDeliveryVisible ? /*#__PURE__*/_jsxDEV(NewDelivery, {\n          onClose: function onClose() {\n            setIsModalNewDeliveryVisible(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), isNotificationsVisible ? /*#__PURE__*/_jsxDEV(Notifications, {\n      onClose: function onClose() {\n        return setIsNotificationsVisible(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 39\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(Header, \"hS95xOQcKLnb4YDyjrllezq24lc=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/Rafael/Documents/Dev/Projects/helix-app/admin-helix-app/src/components/Header/index.tsx"],"names":["React","Image","library","FontAwesomeIcon","fas","add","styles","useState","Notifications","NewDelivery","NewPayment","Header","props","isNotificationsVisible","setIsNotificationsVisible","isSearchInputVisible","setIsSearchInputVisible","isModalNewDeliveryVisible","setIsModalNewDeliveryVisible","isNewOptionsVisible","setIsNewOptionsVisible","isNewPaymentVisible","setIsNewPaymentVisible","openNotifications","showHideSearchInput","newDelivery","newPayment","newOptions","headerContainer","logo","buttonsHeader","searchContainer","showSearchInput","hideSearchInput","searchBtn","faIcon","notificationButton","badgeNewNotification","newOptionsContainer","newDe"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Image from 'next/image'\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n\r\nlibrary.add(fas)\r\n\r\n\r\nimport styles from './styles.module.scss'\r\nimport { useState } from 'react'\r\nimport Notifications from '../Modals/Notifications'\r\nimport NewDelivery from '../Modals/NewDelivery'\r\nimport NewPayment from '../Modals/NewPayment'\r\n\r\nexport default function Header(props) {\r\n    const [isNotificationsVisible, setIsNotificationsVisible] = useState(false)\r\n    const [isSearchInputVisible, setIsSearchInputVisible] = useState(false)\r\n    const [isModalNewDeliveryVisible, setIsModalNewDeliveryVisible] = useState(false)\r\n    const [isNewOptionsVisible, setIsNewOptionsVisible] = useState(false)\r\n    const [isNewPaymentVisible, setIsNewPaymentVisible] = useState(false)\r\n\r\n\r\n    const openNotifications = () => {\r\n        setIsNotificationsVisible(true)\r\n    }\r\n\r\n    const showHideSearchInput = () => {\r\n        if(isSearchInputVisible) {\r\n            setIsSearchInputVisible(false)\r\n        } else {\r\n            setIsSearchInputVisible(true)\r\n        }\r\n    }\r\n\r\n    const newDelivery = () => {\r\n        setIsModalNewDeliveryVisible(true)\r\n    }\r\n\r\n    const newPayment = () => {\r\n        setIsNewPaymentVisible(true)\r\n    }\r\n\r\n    const newOptions = () => {\r\n        setIsNewOptionsVisible(true)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n            <div className={styles.headerContainer}>\r\n                <div className={styles.logo}>\r\n                    <Image \r\n                        width={115.71} \r\n                        height={25} \r\n                        src=\"/img/logo/orange-logo.png\"\r\n                        alt=\"Logo\"\r\n                    />\r\n                </div>\r\n\r\n                <h3>{'{props.title}'}</h3> \r\n\r\n                <div className={styles.buttonsHeader}>\r\n                    <div className={styles.searchContainer}>\r\n                        <input \r\n                            type=\"text\" \r\n                            placeholder=\"Pesquisar\" \r\n                            className={`${isSearchInputVisible ? (\r\n                                `${styles.showSearchInput}`\r\n                            ) : (\r\n                                `${styles.hideSearchInput}`\r\n                            )}`} \r\n                        />\r\n                        <button onClick={showHideSearchInput} className={styles.searchBtn}>\r\n                            <FontAwesomeIcon icon=\"search\" className={styles.faIcon} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <button onClick={openNotifications} className={styles.notificationButton}>\r\n                        <div className={styles.badgeNewNotification}>\r\n                            99+\r\n                        </div>\r\n\r\n                        {/* <div className={styles.newIssueNotification}>\r\n                            <FontAwesomeIcon icon=\"exclamation-circle\" />\r\n                        </div> */}\r\n\r\n                        <FontAwesomeIcon icon=\"bell\"  className={styles.faIcon} />\r\n                    </button>\r\n\r\n                    <button \r\n                        onClick={newOptions} \r\n                        className={styles.newDelivery}\r\n                    >\r\n                        <span>+</span>\r\n                    </button>\r\n\r\n                    {isNewOptionsVisible ? (\r\n                        <div \r\n                            className={styles.newOptionsContainer}\r\n                        >\r\n                            <p\r\n                                onClick={newPayment}\r\n                            >Novo pagamento</p>\r\n                            <p onClick={newDe}>Nova entrega</p>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    {isNewPaymentVisible ? (\r\n                        <NewPayment \r\n                            onClose={() => {\r\n                                setIsNewPaymentVisible(false)\r\n                            }} \r\n                        />\r\n                    ) : null}\r\n\r\n                    {isModalNewDeliveryVisible ? (\r\n                        <NewDelivery \r\n                            onClose={() => {\r\n                                setIsModalNewDeliveryVisible(false)\r\n                            }} \r\n                        />\r\n                    ) : null}\r\n                </div>\r\n            </div>\r\n            \r\n            {isNotificationsVisible ? <Notifications onClose={() => setIsNotificationsVisible(false)} /> : null}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}